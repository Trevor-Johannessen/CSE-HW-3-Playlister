{"ast":null,"code":"import jsTPS_Transaction from \"../common/jsTPS.js\";\nimport api from '../api';\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\n/**\n * DeleteSong_Transaction\n * \n * This class represents a transaction that works with deleting a song. \n * It will be managed by the transaction stack.\n * \n * @author McKilla Gorilla\n * @author ?\n */\n\nexport default class AddSong_Transaction extends jsTPS_Transaction {\n  /*\n  constructor(initID, initListLength, initSong, initIndex) {\n      super();\n      this.listID = initID;\n      this.songInfo = initSong;\n      this.index = initIndex;\n      this.listLength = initListLength;\n  }\n  */\n  constructor(initList, initSong, initStore) {\n    super();\n    this.list = initList;\n    this.listID = initList._id;\n    this.songInfo = initSong;\n    this.store = initStore; //this.store = useContext(GlobalStoreContext);\n  } // DELETE SONG AT GIVEN INDEX FROM LIST\n\n\n  doTransaction() {\n    async function asyncCreateNewSong(list, songInfo) {\n      if (!songInfo) {\n        songInfo = {\n          \"title\": \"Untitled\",\n          \"artist\": \"Unknown\",\n          \"youTubeId\": \"yvjvLqfawpk\"\n        };\n      }\n\n      list.songs.push(songInfo);\n      let response = await api.postSong(list._id, list.songs);\n    }\n\n    asyncCreateNewSong(this.list, this.songInfo);\n  }\n\n  undoTransaction() {\n    console.log(\"UNDOING ADD TRANSACTION\");\n    this.store.deleteSong();\n  }\n\n}","map":{"version":3,"names":["jsTPS_Transaction","api","useContext","GlobalStoreContext","AddSong_Transaction","constructor","initList","initSong","initStore","list","listID","_id","songInfo","store","doTransaction","asyncCreateNewSong","songs","push","response","postSong","undoTransaction","console","log","deleteSong"],"sources":["/Users/trevorjohannessen/My Files/School Stuff/CSE 316/CSE 316 HW 3/Playlister_HW3/client/src/transactions/AddSong_Transaction.js"],"sourcesContent":["import jsTPS_Transaction from \"../common/jsTPS.js\"\nimport api from '../api'\nimport { useContext } from 'react'\nimport { GlobalStoreContext } from '../store'\n/**\n * DeleteSong_Transaction\n * \n * This class represents a transaction that works with deleting a song. \n * It will be managed by the transaction stack.\n * \n * @author McKilla Gorilla\n * @author ?\n */\nexport default class AddSong_Transaction extends jsTPS_Transaction {\n    \n    /*\n    constructor(initID, initListLength, initSong, initIndex) {\n        super();\n        this.listID = initID;\n        this.songInfo = initSong;\n        this.index = initIndex;\n        this.listLength = initListLength;\n    }\n    */\n\n    constructor(initList, initSong, initStore) {\n        super();\n        this.list = initList;\n        this.listID = initList._id;\n        this.songInfo = initSong;\n        this.store = initStore\n        //this.store = useContext(GlobalStoreContext);\n    }\n\n    // DELETE SONG AT GIVEN INDEX FROM LIST\n    doTransaction() {\n        async function asyncCreateNewSong(list, songInfo){\n            if(!songInfo){songInfo = {\"title\": \"Untitled\", \"artist\": \"Unknown\", \"youTubeId\": \"yvjvLqfawpk\"}} \n            list.songs.push(songInfo)\n            let response = await api.postSong(list._id, list.songs)\n        }\n        asyncCreateNewSong(this.list, this.songInfo);\n    }\n    \n    undoTransaction() {\n        console.log(\"UNDOING ADD TRANSACTION\")\n        this.store.deleteSong();\n    }\n}"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,mBAAN,SAAkCJ,iBAAlC,CAAoD;EAE/D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEIK,WAAW,CAACC,QAAD,EAAWC,QAAX,EAAqBC,SAArB,EAAgC;IACvC;IACA,KAAKC,IAAL,GAAYH,QAAZ;IACA,KAAKI,MAAL,GAAcJ,QAAQ,CAACK,GAAvB;IACA,KAAKC,QAAL,GAAgBL,QAAhB;IACA,KAAKM,KAAL,GAAaL,SAAb,CALuC,CAMvC;EACH,CAnB8D,CAqB/D;;;EACAM,aAAa,GAAG;IACZ,eAAeC,kBAAf,CAAkCN,IAAlC,EAAwCG,QAAxC,EAAiD;MAC7C,IAAG,CAACA,QAAJ,EAAa;QAACA,QAAQ,GAAG;UAAC,SAAS,UAAV;UAAsB,UAAU,SAAhC;UAA2C,aAAa;QAAxD,CAAX;MAAkF;;MAChGH,IAAI,CAACO,KAAL,CAAWC,IAAX,CAAgBL,QAAhB;MACA,IAAIM,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,QAAJ,CAAaV,IAAI,CAACE,GAAlB,EAAuBF,IAAI,CAACO,KAA5B,CAArB;IACH;;IACDD,kBAAkB,CAAC,KAAKN,IAAN,EAAY,KAAKG,QAAjB,CAAlB;EACH;;EAEDQ,eAAe,GAAG;IACdC,OAAO,CAACC,GAAR,CAAY,yBAAZ;IACA,KAAKT,KAAL,CAAWU,UAAX;EACH;;AAlC8D"},"metadata":{},"sourceType":"module"}