{"ast":null,"code":"/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we're using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it's a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:4000/api'\n}); // THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\n\nexport const getAllPlaylists = () => api.get(`/playlists`);\nexport const getPlaylistPairs = () => api.get('playlistpairs');\nexport const updatePlaylistById = list => api.put(`/playlist/wholelist/${id}`, list);\nexport const getPlaylistById = id => api.get(`/playlist/${id}`);\nexport const postPlaylist = body => api.post('/playlist', body); // create new playlist\n\nexport const deletePlaylist = id => api.delete(`playlist/${id}`); // delete playlist\n\nexport const postSong = (id, songInfo) => api.put(`playlist/${id}`, songInfo); // add new song\n\nconst apis = {\n  getAllPlaylists,\n  getPlaylistPairs,\n  getPlaylistById,\n  postPlaylist,\n  deletePlaylist,\n  postSong,\n  updatePlaylistById\n};\nexport default apis;","map":{"version":3,"names":["axios","api","create","baseURL","getAllPlaylists","get","getPlaylistPairs","updatePlaylistById","list","put","id","getPlaylistById","postPlaylist","body","post","deletePlaylist","delete","postSong","songInfo","apis"],"sources":["/Users/trevorjohannessen/My Files/School Stuff/CSE 316/CSE 316 HW 3/Playlister_HW3/client/src/api/index.js"],"sourcesContent":["/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we're using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it's a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\n\nimport axios from 'axios'\nconst api = axios.create({\n    baseURL: 'http://localhost:4000/api',\n})\n\n// THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\nexport const getAllPlaylists = () => api.get(`/playlists`);\nexport const getPlaylistPairs = () => api.get('playlistpairs');\nexport const updatePlaylistById = (list) => api.put(`/playlist/wholelist/${id}`, list) \nexport const getPlaylistById = (id) => api.get(`/playlist/${id}`);\nexport const postPlaylist = (body) => api.post('/playlist', body); // create new playlist\nexport const deletePlaylist = (id) => api.delete(`playlist/${id}`); // delete playlist\nexport const postSong = (id, songInfo) => api.put(`playlist/${id}`, songInfo); // add new song\n\nconst apis = {\n    getAllPlaylists,\n    getPlaylistPairs,\n    getPlaylistById,\n    postPlaylist,\n    deletePlaylist,\n    postSong,\n    updatePlaylistById,\n}\n\nexport default apis\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EACrBC,OAAO,EAAE;AADY,CAAb,CAAZ,C,CAIA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAMH,GAAG,CAACI,GAAJ,CAAS,YAAT,CAA9B;AACP,OAAO,MAAMC,gBAAgB,GAAG,MAAML,GAAG,CAACI,GAAJ,CAAQ,eAAR,CAA/B;AACP,OAAO,MAAME,kBAAkB,GAAIC,IAAD,IAAUP,GAAG,CAACQ,GAAJ,CAAS,uBAAsBC,EAAG,EAAlC,EAAqCF,IAArC,CAArC;AACP,OAAO,MAAMG,eAAe,GAAID,EAAD,IAAQT,GAAG,CAACI,GAAJ,CAAS,aAAYK,EAAG,EAAxB,CAAhC;AACP,OAAO,MAAME,YAAY,GAAIC,IAAD,IAAUZ,GAAG,CAACa,IAAJ,CAAS,WAAT,EAAsBD,IAAtB,CAA/B,C,CAA4D;;AACnE,OAAO,MAAME,cAAc,GAAIL,EAAD,IAAQT,GAAG,CAACe,MAAJ,CAAY,YAAWN,EAAG,EAA1B,CAA/B,C,CAA6D;;AACpE,OAAO,MAAMO,QAAQ,GAAG,CAACP,EAAD,EAAKQ,QAAL,KAAkBjB,GAAG,CAACQ,GAAJ,CAAS,YAAWC,EAAG,EAAvB,EAA0BQ,QAA1B,CAAnC,C,CAAwE;;AAE/E,MAAMC,IAAI,GAAG;EACTf,eADS;EAETE,gBAFS;EAGTK,eAHS;EAITC,YAJS;EAKTG,cALS;EAMTE,QANS;EAOTV;AAPS,CAAb;AAUA,eAAeY,IAAf"},"metadata":{},"sourceType":"module"}