{"ast":null,"code":"var _jsxFileName = \"/Users/trevorjohannessen/My Files/School Stuff/CSE 316/CSE 316 HW 3/Playlister_HW3/client/src/components/ListSelector.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ListCard from './ListCard.js';\nimport { GlobalStoreContext } from '../store';\n/*\n    This React component lists all the playlists in the UI.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet handleKeyDown = event => {\n  if (!store.modalActive) {\n    if (event.ctrlKey && (event.key === \"z\" || event.key === \"Z\")) {\n      console.log(\"Undoing\");\n      store.undo();\n    } else if (event.ctrlKey && (event.key === \"y\" || event.key === \"Y\")) {\n      console.log(\"Redoing\");\n      store.redo();\n    }\n  }\n};\n\nconst ListSelector = () => {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  store.history = useHistory();\n  useEffect(() => {\n    store.loadIdNamePairs();\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n\n  function handleCreateNewList() {\n    store.createNewList();\n  }\n\n  let listCard = \"\";\n\n  if (store) {\n    listCard = store.idNamePairs.map(pair => /*#__PURE__*/_jsxDEV(ListCard, {\n      idNamePair: pair,\n      selected: false\n    }, pair._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"playlist-selector\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"list-selector-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"playlist-selector-heading\",\n        children: \"Your Lists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), listCard]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListSelector, \"7Lmb/zrMnln834isycHUB1Km/4E=\", false, function () {\n  return [useHistory];\n});\n\n_c = ListSelector;\nexport default ListSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListSelector\");","map":{"version":3,"names":["React","useContext","useEffect","useHistory","ListCard","GlobalStoreContext","handleKeyDown","event","store","modalActive","ctrlKey","key","console","log","undo","redo","ListSelector","history","loadIdNamePairs","window","addEventListener","document","removeEventListener","handleCreateNewList","createNewList","listCard","idNamePairs","map","pair","_id"],"sources":["/Users/trevorjohannessen/My Files/School Stuff/CSE 316/CSE 316 HW 3/Playlister_HW3/client/src/components/ListSelector.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport ListCard from './ListCard.js'\nimport { GlobalStoreContext } from '../store'\n/*\n    This React component lists all the playlists in the UI.\n    \n    @author McKilla Gorilla\n*/\n\nlet handleKeyDown = (event) => {\n    if(!store.modalActive){\n        if(event.ctrlKey && (event.key === \"z\" || event.key ===\"Z\")){\n            console.log(\"Undoing\")\n            store.undo()\n        }else if (event.ctrlKey && (event.key === \"y\" || event.key ===\"Y\")){\n            console.log(\"Redoing\")\n            store.redo()\n        }\n    }\n}\n\n\nconst ListSelector = () => {\n    const { store } = useContext(GlobalStoreContext);\n    store.history = useHistory();\n    \n    useEffect(() => {\n        store.loadIdNamePairs()\n        window.addEventListener(\"keydown\", handleKeyDown)\n        return () => {\n            document.removeEventListener(\"keydown\", handleKeyDown)\n        }\n    }, []);\n\n    function handleCreateNewList() {\n        store.createNewList();\n    }\n    let listCard = \"\";\n    if (store) {\n        listCard = store.idNamePairs.map((pair) => (\n            <ListCard\n                key={pair._id}\n                idNamePair={pair}\n                selected={false}\n            />\n        ))\n    }\n    return (\n        <div id=\"playlist-selector\">\n            <div id=\"list-selector-list\">\n                <div id=\"playlist-selector-heading\">\n                    Your Lists\n                </div>\n                {listCard}\n            </div>\n        </div>)\n}\n\nexport default ListSelector;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA;AACA;AACA;AACA;AACA;;;;AAEA,IAAIC,aAAa,GAAIC,KAAD,IAAW;EAC3B,IAAG,CAACC,KAAK,CAACC,WAAV,EAAsB;IAClB,IAAGF,KAAK,CAACG,OAAN,KAAkBH,KAAK,CAACI,GAAN,KAAc,GAAd,IAAqBJ,KAAK,CAACI,GAAN,KAAa,GAApD,CAAH,EAA4D;MACxDC,OAAO,CAACC,GAAR,CAAY,SAAZ;MACAL,KAAK,CAACM,IAAN;IACH,CAHD,MAGM,IAAIP,KAAK,CAACG,OAAN,KAAkBH,KAAK,CAACI,GAAN,KAAc,GAAd,IAAqBJ,KAAK,CAACI,GAAN,KAAa,GAApD,CAAJ,EAA6D;MAC/DC,OAAO,CAACC,GAAR,CAAY,SAAZ;MACAL,KAAK,CAACO,IAAN;IACH;EACJ;AACJ,CAVD;;AAaA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACvB,MAAM;IAAER;EAAF,IAAYP,UAAU,CAACI,kBAAD,CAA5B;EACAG,KAAK,CAACS,OAAN,GAAgBd,UAAU,EAA1B;EAEAD,SAAS,CAAC,MAAM;IACZM,KAAK,CAACU,eAAN;IACAC,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCd,aAAnC;IACA,OAAO,MAAM;MACTe,QAAQ,CAACC,mBAAT,CAA6B,SAA7B,EAAwChB,aAAxC;IACH,CAFD;EAGH,CANQ,EAMN,EANM,CAAT;;EAQA,SAASiB,mBAAT,GAA+B;IAC3Bf,KAAK,CAACgB,aAAN;EACH;;EACD,IAAIC,QAAQ,GAAG,EAAf;;EACA,IAAIjB,KAAJ,EAAW;IACPiB,QAAQ,GAAGjB,KAAK,CAACkB,WAAN,CAAkBC,GAAlB,CAAuBC,IAAD,iBAC7B,QAAC,QAAD;MAEI,UAAU,EAAEA,IAFhB;MAGI,QAAQ,EAAE;IAHd,GACSA,IAAI,CAACC,GADd;MAAA;MAAA;MAAA;IAAA,QADO,CAAX;EAOH;;EACD,oBACI;IAAK,EAAE,EAAC,mBAAR;IAAA,uBACI;MAAK,EAAE,EAAC,oBAAR;MAAA,wBACI;QAAK,EAAE,EAAC,2BAAR;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAIKJ,QAJL;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CAlCD;;GAAMT,Y;UAEcb,U;;;KAFda,Y;AAoCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}