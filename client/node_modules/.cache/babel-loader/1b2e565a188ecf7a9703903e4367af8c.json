{"ast":null,"code":"import jsTPS_Transaction from \"../common/jsTPS.js\";\nimport api from '../api';\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\n/**\n * DeleteSong_Transaction\n * \n * This class represents a transaction that works with deleting a song. \n * It will be managed by the transaction stack.\n * \n * @author McKilla Gorilla\n * @author ?\n */\n\nexport default class DeleteSong_Transaction extends jsTPS_Transaction {\n  constructor(initList, initStore, initIndex) {\n    super();\n    this.list = initList;\n    this.store = initStore;\n    this.index = initIndex;\n    this.prevSongs = { ...this.list\n    };\n  } // DELETE SONG AT GIVEN INDEX FROM LIST\n\n\n  doTransaction() {\n    this.list.songs.splice(this.index, 1);\n    this.store.setSongs(this.list);\n    console.log(JSON.stringify(this.list));\n    console.log(JSON.stringify(this.prevSongs));\n  }\n\n  undoTransaction() {\n    console.log(\"UNDOING DELETE TRANSACTION\");\n    console.log(\"prevSongs = \\n\" + this.prevSongs);\n    this.store.setSongs(this.prevSongs);\n  }\n\n}","map":{"version":3,"names":["jsTPS_Transaction","api","useContext","GlobalStoreContext","DeleteSong_Transaction","constructor","initList","initStore","initIndex","list","store","index","prevSongs","doTransaction","songs","splice","setSongs","console","log","JSON","stringify","undoTransaction"],"sources":["/Users/trevorjohannessen/My Files/School Stuff/CSE 316/CSE 316 HW 3/Playlister_HW3/client/src/transactions/DeleteSong_Transaction.js"],"sourcesContent":["import jsTPS_Transaction from \"../common/jsTPS.js\"\nimport api from '../api'\nimport { useContext } from 'react'\nimport { GlobalStoreContext } from '../store'\n/**\n * DeleteSong_Transaction\n * \n * This class represents a transaction that works with deleting a song. \n * It will be managed by the transaction stack.\n * \n * @author McKilla Gorilla\n * @author ?\n */\nexport default class DeleteSong_Transaction extends jsTPS_Transaction {\n\n    constructor(initList, initStore, initIndex) {\n        super();\n        this.list = initList;\n        this.store = initStore\n        this.index = initIndex\n        this.prevSongs = {...this.list}\n    }\n\n    // DELETE SONG AT GIVEN INDEX FROM LIST\n    doTransaction() {\n        this.list.songs.splice(this.index, 1)\n        this.store.setSongs(this.list)\n        console.log(JSON.stringify(this.list))\n        console.log(JSON.stringify(this.prevSongs))\n    }\n    \n    undoTransaction() {\n        console.log(\"UNDOING DELETE TRANSACTION\")\n        console.log(\"prevSongs = \\n\" + this.prevSongs)\n        this.store.setSongs(this.prevSongs);\n    }\n}"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,sBAAN,SAAqCJ,iBAArC,CAAuD;EAElEK,WAAW,CAACC,QAAD,EAAWC,SAAX,EAAsBC,SAAtB,EAAiC;IACxC;IACA,KAAKC,IAAL,GAAYH,QAAZ;IACA,KAAKI,KAAL,GAAaH,SAAb;IACA,KAAKI,KAAL,GAAaH,SAAb;IACA,KAAKI,SAAL,GAAiB,EAAC,GAAG,KAAKH;IAAT,CAAjB;EACH,CARiE,CAUlE;;;EACAI,aAAa,GAAG;IACZ,KAAKJ,IAAL,CAAUK,KAAV,CAAgBC,MAAhB,CAAuB,KAAKJ,KAA5B,EAAmC,CAAnC;IACA,KAAKD,KAAL,CAAWM,QAAX,CAAoB,KAAKP,IAAzB;IACAQ,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe,KAAKX,IAApB,CAAZ;IACAQ,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe,KAAKR,SAApB,CAAZ;EACH;;EAEDS,eAAe,GAAG;IACdJ,OAAO,CAACC,GAAR,CAAY,4BAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,mBAAmB,KAAKN,SAApC;IACA,KAAKF,KAAL,CAAWM,QAAX,CAAoB,KAAKJ,SAAzB;EACH;;AAtBiE"},"metadata":{},"sourceType":"module"}